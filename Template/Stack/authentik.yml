---
version: "3.2"
services:
  postgresql:
    image: postgres:12-alpine
    restart: unless-stopped
    volumes:
      - auth-database:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${DB_PASS:?database password required}
      - POSTGRES_USER=${PG_USER:-authentik}
      - POSTGRES_DB=${PG_DB:-authentik}
    networks:
      - auth-secure
    env_file:
      - .env
  redis:
    image: docker.io/library/redis:alpine
    command: --save 60 1 --loglevel warning
    restart: unless-stopped
    healthcheck:
      test:
        - CMD-SHELL
        - redis-cli ping | grep PONG
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    volumes:
      - auth-redis:/data
    networks:
      - auth-secure
    env_file:
      - .env
  server:
    image: ${AUTHENTIK_IMAGE:-ghcr.io/goauthentik/server}:${AUTHENTIK_TAG:-2023.5.3}
    restart: unless-stopped
    command: server
    environment:
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_POSTGRESQL__HOST: postgresql
      AUTHENTIK_POSTGRESQL__USER: ${PG_USER:-authentik}
      AUTHENTIK_POSTGRESQL__NAME: ${PG_DB:-authentik}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${DB_PASS}
    volumes:
      - auth-appdata:/media
      - auth-appdata:/templates
    env_file:
      - .env
    ports:
      - ${AUTH_PORT_HTTP}:9000
      - ${AUTH_PORT_HTTPS}:9443
    depends_on:
      - postgresql
      - redis
    networks:
      - auth-secure
      - proxynet
  worker:
    image: ${AUTHENTIK_IMAGE:-ghcr.io/goauthentik/server}:${AUTHENTIK_TAG:-2023.5.3}
    restart: unless-stopped
    command: worker
    environment:
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_POSTGRESQL__HOST: postgresql
      AUTHENTIK_POSTGRESQL__USER: ${PG_USER:-authentik}
      AUTHENTIK_POSTGRESQL__NAME: ${PG_DB:-authentik}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${DB_PASS}
    user: root
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - auth-appdata:/media
      - auth-appdata:/certs
      - auth-appdata:/templates
    depends_on:
      - postgresql
      - redis
    networks:
      - auth-secure
      - proxynet
    env_file:
      - .env
volumes:
  auth-database:
    driver: local
  auth-redis:
    driver: local
  auth-appdata:
    driver: local
networks:
  proxynet:
    driver: bridge
    external: true
  auth-secure:
    driver: bridge
    external: true
